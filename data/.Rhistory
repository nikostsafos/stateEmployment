df$`32` = (df$`32`/df$`00`)*100
df$`40` = (df$`40`/df$`00`)*100
df$`41` = (df$`41`/df$`00`)*100
df$`42` = (df$`42`/df$`00`)*100
df$`43` = (df$`43`/df$`00`)*100
df$`50` = (df$`50`/df$`00`)*100
df$`55` = (df$`55`/df$`00`)*100
df$`60` = (df$`60`/df$`00`)*100
df$`65` = (df$`65`/df$`00`)*100
df$`70` = (df$`70`/df$`00`)*100
df$`80` = (df$`80`/df$`00`)*100
df$`90` = (df$`90`/df$`00`)*100
df$`00` = (df$`00`/df$`00`)*100
df = melt(df, id.vars = c('year', 'State'))
colnames(df) = c('Year', 'State', 'Sector', 'Value')
# df = df %>% mutate_each(funs((./Total)*100), starts_with("0|1|2|3|4|5|6|7|8|9"))
# df = df %>% mutate_each(funs((./Total)*100), starts_with("1"))
# Exclude high-level aggregations
df = df[!df$Sector %in% c('00', # Total Nonfarm
'05', # Total Private
'06', # Goods Producing
'07', # Service-Providing
'08', # Private Service Providing
'15', # Mining, Logging, and Construction
# '30', # Manufacturing
'31', # Durable goods
'32', # Non-durable goods
'40'),] # Trade, Transportation, and Utilities
df = df[!df$State %in% c('11', # DC
'72', # Puerto Rico
'78'),] # Virgin Islands
sectorCode = read.table('../backup/sector.tsv', sep = '\t', header = T, row.names = NULL)
sectorCode = sectorCode[,c(1:2)]
colnames(sectorCode) = c('Sector', 'SectorName')
df = merge(df, sectorCode, by.df = 'Sector', by.sectorCode = 'Sector')
df = df [,c(3,5,2,4)]
rm(sectorCode)
stateCode = read.table('../backup/states.tsv', sep = '\t', header = T, row.names = NULL)
stateCode = stateCode[,c(1:2)]
colnames(stateCode) = c('State', 'StateName')
df = merge(df, stateCode, by.df = 'State', stateCode = 'State')
rm(stateCode)
df = df [,c(5,2:4)]
colnames(df) = c('State', 'Sector', 'Year', 'Value')
library(ggplot2) # ggplot
library(scales) # comma
library(tidyr) # spread
# library(dplyr) # mutate.each
library(reshape) # melt
setwd("~/Dropbox/- Code/America/- BLS, Employment/State and Area Employment/codeData")
# Read in data ####
dat = read.csv('../cleanData/AllDataAnnual.csv', header = T)
# Format cells to match codes in back-up tables
dat$State = formatC(dat$State, width = 2, flag = 0)
dat$Area = formatC(dat$Area, width = 4, flag = 0)
dat$Sector = formatC(dat$Sector, width = 2, flag = 0)
dat$Industry = formatC(dat$Industry, width = 8, flag = 0)
dat$Data = formatC(dat$Data, width = 2, flag = 0)
dat = dat[ dat$year >= 1990,]
dat$year = as.Date(paste(dat$year, '01', '01', sep = '-'), format = '%Y-%m-%d')
# Subset data ####
df = dat[dat$Data == '01',] # All Employees, In Thousands
df = df[df$Area == '0000', ] # Select states only
df$Industry = substring(df$Industry, 3,8) # Extract industry information
df = df[df$Industry == '000000', ] # Select only total industry-level information
df = df[,c(1:2,4,7)]
df = spread(df, Sector, value)
sectors = colnames(df)[3:24]
df$`05` = (df$`05`/df$`00`)*100
df$`06` = (df$`06`/df$`00`)*100
df$`07` = (df$`07`/df$`00`)*100
df$`08` = (df$`08`/df$`00`)*100
df$`10` = (df$`10`/df$`00`)*100
df$`15` = (df$`15`/df$`00`)*100
df$`20` = (df$`20`/df$`00`)*100
df$`30` = (df$`30`/df$`00`)*100
df$`31` = (df$`31`/df$`00`)*100
df$`32` = (df$`32`/df$`00`)*100
df$`40` = (df$`40`/df$`00`)*100
df$`41` = (df$`41`/df$`00`)*100
df$`42` = (df$`42`/df$`00`)*100
df$`43` = (df$`43`/df$`00`)*100
df$`50` = (df$`50`/df$`00`)*100
df$`55` = (df$`55`/df$`00`)*100
df$`60` = (df$`60`/df$`00`)*100
df$`65` = (df$`65`/df$`00`)*100
df$`70` = (df$`70`/df$`00`)*100
df$`80` = (df$`80`/df$`00`)*100
df$`90` = (df$`90`/df$`00`)*100
df$`00` = (df$`00`/df$`00`)*100
df = melt(df, id.vars = c('year', 'State'))
colnames(df) = c('Year', 'State', 'Sector', 'Value')
# df = df %>% mutate_each(funs((./Total)*100), starts_with("0|1|2|3|4|5|6|7|8|9"))
# df = df %>% mutate_each(funs((./Total)*100), starts_with("1"))
# Exclude high-level aggregations
df = df[!df$Sector %in% c('00', # Total Nonfarm
'05', # Total Private
'06', # Goods Producing
'07', # Service-Providing
'08', # Private Service Providing
'15', # Mining, Logging, and Construction
# '30', # Manufacturing
'31', # Durable goods
'32', # Non-durable goods
'40'),] # Trade, Transportation, and Utilities
df = df[!df$State %in% c('11', # DC
'72', # Puerto Rico
'78'),] # Virgin Islands
sectorCode = read.table('../backup/sector.tsv', sep = '\t', header = T, row.names = NULL)
sectorCode = sectorCode[,c(1:2)]
colnames(sectorCode) = c('Sector', 'SectorName')
df = merge(df, sectorCode, by.df = 'Sector', by.sectorCode = 'Sector')
df = df [,c(3,5,2,4)]
rm(sectorCode)
stateCode = read.table('../backup/states.tsv', sep = '\t', header = T, row.names = NULL)
stateCode = stateCode[,c(1:2)]
colnames(stateCode) = c('State', 'StateName')
df = merge(df, stateCode, by.df = 'State', stateCode = 'State')
rm(stateCode)
df = df [,c(5,2:4)]
colnames(df) = c('State', 'Sector', 'Year', 'Value')
View(datf)
View(df)
df = spread(df, Sector, Value)
View(df)
df$Year <- format(df$Year, "%Y") ## create year column
View(df)
write.csv(df, '../cleanData/stateEmploymentbySector.csv', row.names = F)
setwd("~/Dropbox/- Code/America/- BLS, Employment/State and Area Employment/codeData")
dat = read.csv('../cleanData/stateEmploymentbySector.csv', header = T, stringsAsFactors = F)
dat = dat[dat$Year == 1990,]
dat = subset(dat, select= c(State,
Year,
Government))
write.csv(dat, '../cleanData/stateEmployment.csv', row.names = F)
library(ggplot2) # ggplot
library(scales) # comma
library(tidyr) # spread
# library(dplyr) # mutate.each
library(reshape) # melt
setwd("~/Dropbox/- Code/America/- BLS, Employment/State and Area Employment/codeData")
# Read in data ####
dat = read.csv('../cleanData/AllDataAnnual.csv', header = T)
# Format cells to match codes in back-up tables
dat$State = formatC(dat$State, width = 2, flag = 0)
dat$Area = formatC(dat$Area, width = 4, flag = 0)
dat$Sector = formatC(dat$Sector, width = 2, flag = 0)
dat$Industry = formatC(dat$Industry, width = 8, flag = 0)
dat$Data = formatC(dat$Data, width = 2, flag = 0)
dat = dat[ dat$year >= 1990,]
dat$year = as.Date(paste(dat$year, '01', '01', sep = '-'), format = '%Y-%m-%d')
# Subset data ####
df = dat[dat$Data == '01',] # All Employees, In Thousands
df = df[df$Area == '0000', ] # Select states only
df$Industry = substring(df$Industry, 3,8) # Extract industry information
df = df[df$Industry == '000000', ] # Select only total industry-level information
df = df[,c(1:2,4,7)]
df = spread(df, Sector, value)
sectors = colnames(df)[3:24]
df$`05` = (df$`05`/df$`00`)*100
df$`06` = (df$`06`/df$`00`)*100
df$`07` = (df$`07`/df$`00`)*100
df$`08` = (df$`08`/df$`00`)*100
df$`10` = (df$`10`/df$`00`)*100
df$`15` = (df$`15`/df$`00`)*100
df$`20` = (df$`20`/df$`00`)*100
df$`30` = (df$`30`/df$`00`)*100
df$`31` = (df$`31`/df$`00`)*100
df$`32` = (df$`32`/df$`00`)*100
df$`40` = (df$`40`/df$`00`)*100
df$`41` = (df$`41`/df$`00`)*100
df$`42` = (df$`42`/df$`00`)*100
df$`43` = (df$`43`/df$`00`)*100
df$`50` = (df$`50`/df$`00`)*100
df$`55` = (df$`55`/df$`00`)*100
df$`60` = (df$`60`/df$`00`)*100
df$`65` = (df$`65`/df$`00`)*100
df$`70` = (df$`70`/df$`00`)*100
df$`80` = (df$`80`/df$`00`)*100
df$`90` = (df$`90`/df$`00`)*100
df$`00` = (df$`00`/df$`00`)*100
df = melt(df, id.vars = c('year', 'State'))
colnames(df) = c('Year', 'State', 'Sector', 'Value')
# df = df %>% mutate_each(funs((./Total)*100), starts_with("0|1|2|3|4|5|6|7|8|9"))
# df = df %>% mutate_each(funs((./Total)*100), starts_with("1"))
# Exclude high-level aggregations
df = df[!df$Sector %in% c('00', # Total Nonfarm
'05', # Total Private
'06', # Goods Producing
'07', # Service-Providing
'08', # Private Service Providing
'15', # Mining, Logging, and Construction
# '30', # Manufacturing
'31', # Durable goods
'32', # Non-durable goods
'40'),] # Trade, Transportation, and Utilities
df = df[!df$State %in% c('11', # DC
'72', # Puerto Rico
'78'),] # Virgin Islands
sectorCode = read.table('../backup/sector.tsv', sep = '\t', header = T, row.names = NULL)
sectorCode = sectorCode[,c(1:2)]
colnames(sectorCode) = c('Sector', 'SectorName')
df = merge(df, sectorCode, by.df = 'Sector', by.sectorCode = 'Sector')
df = df [,c(3,5,2,4)]
rm(sectorCode)
stateCode = read.table('../backup/states.tsv', sep = '\t', header = T, row.names = NULL)
stateCode = stateCode[,c(1:2)]
colnames(stateCode) = c('State', 'StateName')
df = merge(df, stateCode, by.df = 'State', stateCode = 'State')
rm(stateCode)
df = df [,c(5,2:4)]
colnames(df) = c('State', 'Sector', 'Year', 'Value')
df$Year <- format(df$Year, "%Y") ## create year column
write.csv(df, '../cleanData/stateEmploymentbySector.csv', row.names = F)
library(ggplot2) # ggplot
library(scales) # comma
library(tidyr) # spread
# library(dplyr) # mutate.each
library(reshape) # melt
setwd("~/Dropbox/- Code/America/- BLS, Employment/State and Area Employment/codeData")
dat = read.csv('../cleanData/AllDataAnnual.csv', header = T)
dat$State = formatC(dat$State, width = 2, flag = 0)
dat$Area = formatC(dat$Area, width = 4, flag = 0)
dat$Sector = formatC(dat$Sector, width = 2, flag = 0)
dat$Industry = formatC(dat$Industry, width = 8, flag = 0)
dat$Data = formatC(dat$Data, width = 2, flag = 0)
dat = dat[ dat$year >= 1990,]
dat$year = as.Date(paste(dat$year, '01', '01', sep = '-'), format = '%Y-%m-%d')
df = dat[dat$Data == '01',] # All Employees, In Thousands
df = df[df$Area == '0000', ] # Select states only
df$Industry = substring(df$Industry, 3,8) # Extract industry information
df = df[df$Industry == '000000', ] # Select only total industry-level information
df = df[,c(1:2,4,7)]
df = spread(df, Sector, value)
sectors = colnames(df)[3:24]
df$`05` = (df$`05`/df$`00`)*100
df$`06` = (df$`06`/df$`00`)*100
df$`07` = (df$`07`/df$`00`)*100
df$`08` = (df$`08`/df$`00`)*100
df$`10` = (df$`10`/df$`00`)*100
df$`15` = (df$`15`/df$`00`)*100
df$`20` = (df$`20`/df$`00`)*100
df$`30` = (df$`30`/df$`00`)*100
df$`31` = (df$`31`/df$`00`)*100
df$`32` = (df$`32`/df$`00`)*100
df$`40` = (df$`40`/df$`00`)*100
df$`41` = (df$`41`/df$`00`)*100
df$`42` = (df$`42`/df$`00`)*100
df$`43` = (df$`43`/df$`00`)*100
df$`50` = (df$`50`/df$`00`)*100
df$`55` = (df$`55`/df$`00`)*100
df$`60` = (df$`60`/df$`00`)*100
df$`65` = (df$`65`/df$`00`)*100
df$`70` = (df$`70`/df$`00`)*100
df$`80` = (df$`80`/df$`00`)*100
df$`90` = (df$`90`/df$`00`)*100
df$`00` = (df$`00`/df$`00`)*100
df = melt(df, id.vars = c('year', 'State'))
colnames(df) = c('Year', 'State', 'Sector', 'Value')
# df = df %>% mutate_each(funs((./Total)*100), starts_with("0|1|2|3|4|5|6|7|8|9"))
# df = df %>% mutate_each(funs((./Total)*100), starts_with("1"))
# Exclude high-level aggregations
df = df[!df$Sector %in% c('00', # Total Nonfarm
'05', # Total Private
'06', # Goods Producing
'07', # Service-Providing
'08', # Private Service Providing
'15', # Mining, Logging, and Construction
# '30', # Manufacturing
'31', # Durable goods
'32', # Non-durable goods
'40'),] # Trade, Transportation, and Utilities
df = df[!df$State %in% c('72', # Puerto Rico
'78'),] # Virgin Islands
sectorCode = read.table('../backup/sector.tsv', sep = '\t', header = T, row.names = NULL)
sectorCode = sectorCode[,c(1:2)]
colnames(sectorCode) = c('Sector', 'SectorName')
df = merge(df, sectorCode, by.df = 'Sector', by.sectorCode = 'Sector')
df = df [,c(3,5,2,4)]
rm(sectorCode)
stateCode = read.table('../backup/states.tsv', sep = '\t', header = T, row.names = NULL)
stateCode = stateCode[,c(1:2)]
colnames(stateCode) = c('State', 'StateName')
df = merge(df, stateCode, by.df = 'State', stateCode = 'State')
rm(stateCode)
df = df [,c(5,2:4)]
colnames(df) = c('State', 'Sector', 'Year', 'Value')
df$Year <- format(df$Year, "%Y") ## create year column
df$Year = as.numeric(df$Year)
write.csv(df, '../cleanData/data.csv', row.names = F)
library(ggplot2) # ggplot
library(scales) # comma
library(tidyr) # spread
# library(dplyr) # mutate.each
library(reshape) # melt
setwd("~/Dropbox/- Code/America/- BLS, Employment/State and Area Employment/codeData")
# Read in data ####
dat = read.csv('../cleanData/AllDataAnnual.csv', header = T)
# Format cells to match codes in back-up tables
dat$State = formatC(dat$State, width = 2, flag = 0)
dat$Area = formatC(dat$Area, width = 4, flag = 0)
dat$Sector = formatC(dat$Sector, width = 2, flag = 0)
dat$Industry = formatC(dat$Industry, width = 8, flag = 0)
dat$Data = formatC(dat$Data, width = 2, flag = 0)
dat = dat[ dat$year >= 1990,]
dat$year = as.Date(paste(dat$year, '01', '01', sep = '-'), format = '%Y-%m-%d')
# Subset data ####
df = dat[dat$Data == '01',] # All Employees, In Thousands
df = df[df$Area == '0000', ] # Select states only
df$Industry = substring(df$Industry, 3,8) # Extract industry information
df = df[df$Industry == '000000', ] # Select only total industry-level information
df = df[,c(1:2,4,7)]
df = spread(df, Sector, value)
sectors = colnames(df)[3:24]
df$`05` = (df$`05`/df$`00`)*100
df$`06` = (df$`06`/df$`00`)*100
df$`07` = (df$`07`/df$`00`)*100
df$`08` = (df$`08`/df$`00`)*100
df$`10` = (df$`10`/df$`00`)*100
df$`15` = (df$`15`/df$`00`)*100
df$`20` = (df$`20`/df$`00`)*100
df$`30` = (df$`30`/df$`00`)*100
df$`31` = (df$`31`/df$`00`)*100
df$`32` = (df$`32`/df$`00`)*100
df$`40` = (df$`40`/df$`00`)*100
df$`41` = (df$`41`/df$`00`)*100
df$`42` = (df$`42`/df$`00`)*100
df$`43` = (df$`43`/df$`00`)*100
df$`50` = (df$`50`/df$`00`)*100
df$`55` = (df$`55`/df$`00`)*100
df$`60` = (df$`60`/df$`00`)*100
df$`65` = (df$`65`/df$`00`)*100
df$`70` = (df$`70`/df$`00`)*100
df$`80` = (df$`80`/df$`00`)*100
df$`90` = (df$`90`/df$`00`)*100
df$`00` = (df$`00`/df$`00`)*100
df = melt(df, id.vars = c('year', 'State'))
colnames(df) = c('Year', 'State', 'Sector', 'Value')
# df = df %>% mutate_each(funs((./Total)*100), starts_with("0|1|2|3|4|5|6|7|8|9"))
# df = df %>% mutate_each(funs((./Total)*100), starts_with("1"))
# Exclude high-level aggregations
df = df[!df$Sector %in% c('00', # Total Nonfarm
'05', # Total Private
'06', # Goods Producing
'07', # Service-Providing
'08', # Private Service Providing
'15', # Mining, Logging, and Construction
# '30', # Manufacturing
'31', # Durable goods
'32', # Non-durable goods
'40'),] # Trade, Transportation, and Utilities
df = df[!df$State %in% c('72', # Puerto Rico
'78'),] # Virgin Islands
sectorCode = read.table('../backup/sector.tsv', sep = '\t', header = T, row.names = NULL)
sectorCode = sectorCode[,c(1:2)]
colnames(sectorCode) = c('Sector', 'SectorName')
df = merge(df, sectorCode, by.df = 'Sector', by.sectorCode = 'Sector')
df = df [,c(3,5,2,4)]
rm(sectorCode)
stateCode = read.table('../backup/states.tsv', sep = '\t', header = T, row.names = NULL)
stateCode = stateCode[,c(1:2)]
colnames(stateCode) = c('State', 'StateName')
df = merge(df, stateCode, by.df = 'State', stateCode = 'State')
rm(stateCode)
df = df [,c(5,2:4)]
colnames(df) = c('State', 'Sector', 'Year', 'Value')
df = spread(df, Sector, Value)
df$Year <- format(df$Year, "%Y") ## create year column
df = melt(df, id.vars = c('State', 'Year'))
colnames(df) = c('State', 'Year', 'Sector' ,'Value')
df$Year = as.numeric(df$Year)
View(df)
write.csv(df, '../cleanData/data.csv', row.names = F)
library(tidyr) # spread
library(reshape) # melt
setwd("~/Dropbox/- Code/- Github/employmentbyState/data")
# fileURL: 'https://download.bls.gov/pub/time.series/sm/'
# file: sm.data.1.AllData
# download file and save as AllData.tsv
# Data cleaning
dat = read.table('AllData.tsv', sep="\t", header=TRUE, stringsAsFactors = F)
dat$Survey = substring(dat$series_id, 0,2)
dat$Seasonal = substring(dat$series_id, 3,3)
dat$State = substring(dat$series_id, 4,5)
dat$Area = substring(dat$series_id, 6,10)
dat$Sector = substring(dat$series_id, 11,12)
dat$Industry = substring(dat$series_id, 11,18)
dat$Data = substring(dat$series_id, 19,20)
dat$period <- gsub("M","", dat$period)
dat$value = as.numeric(dat$value)
dat = dat[ dat$year >= 1990,]
dat$year = as.Date(paste(dat$year, '01', '01', sep = '-'), format = '%Y-%m-%d')
# dat <- transform(dat, value = as.numeric(levels(value)[value]))
## Extract annual data and subset data after 1990
dat = dat[dat$period == '13',]
dat = dat[,c(2, 8:12, 4)] # take out Survey (all SM) and seasonal (all U)
# Subset data ####
df = dat[dat$Data == '01',] # All Employees, In Thousands
df = df[df$Area == '00000', ] # Select states only
df$Industry = substring(df$Industry, 3,8) # Extract industry information
df = df[df$Industry == '000000', ] # Select only total industry-level information
df = df[,c(1:2,4,7)]
df = spread(df, Sector, value)
sectors = colnames(df)[3:24]
df$`05` = (df$`05`/df$`00`)*100
df$`06` = (df$`06`/df$`00`)*100
df$`07` = (df$`07`/df$`00`)*100
df$`08` = (df$`08`/df$`00`)*100
df$`10` = (df$`10`/df$`00`)*100
df$`15` = (df$`15`/df$`00`)*100
df$`20` = (df$`20`/df$`00`)*100
df$`30` = (df$`30`/df$`00`)*100
df$`31` = (df$`31`/df$`00`)*100
df$`32` = (df$`32`/df$`00`)*100
df$`40` = (df$`40`/df$`00`)*100
df$`41` = (df$`41`/df$`00`)*100
df$`42` = (df$`42`/df$`00`)*100
df$`43` = (df$`43`/df$`00`)*100
df$`50` = (df$`50`/df$`00`)*100
df$`55` = (df$`55`/df$`00`)*100
df$`60` = (df$`60`/df$`00`)*100
df$`65` = (df$`65`/df$`00`)*100
df$`70` = (df$`70`/df$`00`)*100
df$`80` = (df$`80`/df$`00`)*100
df$`90` = (df$`90`/df$`00`)*100
df$`00` = (df$`00`/df$`00`)*100
df = melt(df, id.vars = c('year', 'State'))
colnames(df) = c('Year', 'State', 'Sector', 'Value')
# Exclude high-level aggregations
df = df[!df$Sector %in% c('00', # Total Nonfarm
'05', # Total Private
'06', # Goods Producing
'07', # Service-Providing
'08', # Private Service Providing
'15', # Mining, Logging, and Construction
# '30', # Manufacturing
'31', # Durable goods
'32', # Non-durable goods
'40'),] # Trade, Transportation, and Utilities
df = df[!df$State %in% c('72', # Puerto Rico
'78'),] # Virgin Islands
sectorCode = read.table('backup/sector.tsv', sep = '\t', header = T, row.names = NULL)
sectorCode = sectorCode[,c(1:2)]
colnames(sectorCode) = c('Sector', 'SectorName')
df = merge(df, sectorCode, by.df = 'Sector', by.sectorCode = 'Sector')
df = df [,c(3,5,2,4)]
rm(sectorCode)
stateCode = read.table('backup/states.tsv', sep = '\t', header = T, row.names = NULL)
stateCode = stateCode[,c(1:2)]
colnames(stateCode) = c('State', 'StateName')
df = merge(df, stateCode, by.df = 'State', stateCode = 'State')
rm(stateCode)
df = df [,c(5,2:4)]
df = na.omit(df)
colnames(df) = c('State', 'Sector', 'Year', 'Value')
df = spread(df, Sector, Value)
df$Year <- format(df$Year, "%Y") ## create year column
df = melt(df, id.vars = c('State', 'Year'))
colnames(df) = c('State', 'Year', 'Sector' ,'Value')
df$Year = as.numeric(df$Year)
write.csv(df, 'employment.csv', row.names = F)
library(reshape) # melt
setwd("~/Dropbox/- Code/- Github/employmentbyState/data")
fileURL = 'https://www.bls.gov/lau/staadata.txt'
download.file(fileURL, destfile = 'staadata.txt')
# Read in file; set widths to match file format ####
dat = read.fwf('staadata.txt',
skip = 18,
strip.white = T,
stringsAsFactors = F,
widths = c(17, 14, 14, 10, 14, 10, 13, 9))
# Set column names
colnames(dat) = c('Year',
'Population',
'CivilianLaborForce',
'CivilianLaborForcePCT',
'Employment',
'EmploymentPCT',
'Unemployment',
'UnemploymentPCT')
# Remove rows where Unemployment is NA -- removes all lines w/o data
# df = dat[is.na(dat$UnemploymentPCT),]
dat = dat[!is.na(dat$UnemploymentPCT),]
# Remove dots, trailing whitespace, and commas to turn numbers into numeric
dat$Year = gsub('\\.', '', dat$Year)
dat$Year = trimws(dat$Year, "r")
dat$Population = as.numeric(gsub(',', '', dat$Population))
dat$CivilianLaborForce = as.numeric(gsub(',', '', dat$CivilianLaborForce))
dat$Employment = as.numeric(gsub(',', '', dat$Employment))
dat$Unemployment = as.numeric(gsub(',', '', dat$Unemployment))
minY = as.numeric(min(dat$Year))
maxY = as.numeric(max(dat$Year))
years = maxY-minY+1
states = state.name
states = sort(append(states, 'District of Columbia'))
states = append(states, c('Los Angeles County',
'New York city'))
states
State = rep(states, each = years)
dat$State = State
dat = subset(dat, select = c('State',
'Year',
'CivilianLaborForcePCT',
'EmploymentPCT',
'UnemploymentPCT'))
dat = melt(dat, id.vars = c('State', 'Year'))
colnames(dat)[3:4] = c('Variable', 'Value')
dat$Variable = gsub('CivilianLaborForcePCT', 'Labor force participation', dat$Variable)
dat$Variable = gsub('EmploymentPCT', 'Total employment', dat$Variable)
dat$Variable = gsub('UnemploymentPCT', 'Unemployment', dat$Variable)
dat = dat[dat$Year >= 1990,]
write.csv(dat, 'laborforce.csv', row.names = F)
